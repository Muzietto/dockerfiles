{"version":3,"sources":["../../src/__tests__/config.test.js"],"names":["projectDir","process","cwd","cfg","require","beforeEach","chdir","reloadConfig","afterEach","describe","it","expect","getOutputDir","toEqual","pkg","id","name","version","dir","getExclusions","plugins","getPlugins","run","config","getBabelConfig"],"mappings":"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","file":"config.test.js","sourcesContent":["const projectDir = process.cwd();\nconst cfg = require('../config');\n\nbeforeEach(() => {\n  process.chdir(\n    `${projectDir}/packages/liferay-npm-bundler/src/__tests__/config/` +\n      'default'\n  );\n  cfg.reloadConfig();\n});\n\nafterEach(() => {\n  process.chdir(projectDir);\n});\n\ndescribe('getOutputDir()', () => {\n  it('works', () => {\n    expect(cfg.getOutputDir()).toEqual('output-dir');\n  });\n});\n\ndescribe('getExclusions()', () => {\n  it('works for unversioned packages', () => {\n    const pkg = {\n      id: 'package-a@2.0.0',\n      name: 'package-a',\n      version: '2.0.0',\n      dir: '',\n    };\n\n    expect(cfg.getExclusions(pkg)).toEqual(['*']);\n  });\n\n  it('works for versioned packages', () => {\n    const pkg = {\n      id: 'package-b@1.0.0',\n      name: 'package-b',\n      version: '1.0.0',\n      dir: '',\n    };\n\n    expect(cfg.getExclusions(pkg)).toEqual(['**/*.js', '**/*.css']);\n  });\n\n  it('returns the default exclusions for unconfigured packages', () => {\n    const pkg = {\n      id: 'not-existent-package@1.0.0',\n      name: 'not-existent-package',\n      version: '1.0.0',\n      dir: '',\n    };\n\n    expect(cfg.getExclusions(pkg)).toEqual(['test/**/*']);\n  });\n\n  // Impossible to test once we test for default exclusions\n  it('returns an empty array for unconfigured packages', () => {\n    process.chdir(\n      `${projectDir}/packages/liferay-npm-bundler/src/__tests__/config/` +\n        'empty'\n    );\n    cfg.reloadConfig();\n\n    const pkg = {\n      id: 'not-existent-package@1.0.0',\n      name: 'not-existent-package',\n      version: '1.0.0',\n      dir: '',\n    };\n\n    expect(cfg.getExclusions(pkg)).toEqual([]);\n  });\n});\n\ndescribe('getPlugins()', () => {\n  it('loads default \"pre\" plugins correctly', () => {\n    const plugins = cfg.getPlugins('pre', {\n      id: 'package-star@1.0.0',\n      name: 'package-star',\n      version: '1.0.0',\n      dir: '',\n    });\n\n    expect(plugins[0].run({}, {})).toEqual(0);\n    expect(plugins[0].config).toEqual({});\n\n    expect(plugins[1].run({}, {})).toEqual(1);\n    expect(plugins[1].config).toEqual('config-1');\n  });\n\n  it('loads default \"post\" plugins correctly', () => {\n    const plugins = cfg.getPlugins('post', {\n      id: 'package-star@1.0.0',\n      name: 'package-star',\n      version: '1.0.0',\n      dir: '',\n    });\n\n    expect(plugins[0].run({}, {})).toEqual(2);\n    expect(plugins[0].config).toEqual({});\n\n    expect(plugins[1].run({}, {})).toEqual(3);\n    expect(plugins[1].config).toEqual('config-3');\n  });\n\n  it('loads per-package \"pre\" plugins correctly', () => {\n    const plugins = cfg.getPlugins('pre', {\n      id: 'package@1.0.0',\n      name: 'package',\n      version: '1.0.0',\n      dir: '',\n    });\n\n    expect(plugins[0].run({}, {})).toEqual(4);\n    expect(plugins[0].config).toEqual({});\n\n    expect(plugins[1].run({}, {})).toEqual(5);\n    expect(plugins[1].config).toEqual('config-5');\n  });\n\n  it('loads per-package \"post\" plugins correctly', () => {\n    const plugins = cfg.getPlugins('post', {\n      id: 'package@1.0.0',\n      name: 'package',\n      version: '1.0.0',\n      dir: '',\n    });\n\n    expect(plugins[0].run({}, {})).toEqual(6);\n    expect(plugins[0].config).toEqual({});\n\n    expect(plugins[1].run({}, {})).toEqual(7);\n    expect(plugins[1].config).toEqual('config-7');\n  });\n});\n\ndescribe('getBabelConfig()', () => {\n  it('loads default config correctly', () => {\n    const config = cfg.getBabelConfig({\n      id: 'package-star@1.0.0',\n      name: 'package-star',\n      version: '1.0.0',\n      dir: '',\n    });\n\n    expect(config).toEqual({config: 'config-*'});\n  });\n\n  it('loads per-package config correctly', () => {\n    const config = cfg.getBabelConfig({\n      id: 'package@1.0.0',\n      name: 'package',\n      version: '1.0.0',\n      dir: '',\n    });\n\n    expect(config).toEqual({config: 'config-package@1.0.0'});\n  });\n});\n"]}