{"version":3,"sources":["../../src/__tests__/dependencies.test.js"],"names":["expect","extend","toMatchDependencies","deps","pkgIds","missingDeps","extraDeps","invalidDepFields","forEach","dep","pkgId","push","pkgIdParts","split","pkgName","pkgVersion","invalidFields","id","name","version","expectedDepDir","normalize","dir","endsWith","Object","keys","length","indexOf","depId","pass","message","JSON","stringify","beforeAll","process","chdir","afterAll","it","only"],"mappings":";;AAAA;;;;AACA;;;;AAEAA,OAAOC,MAAP,CAAc;AACZC,qBADY,+BACQC,IADR,EACyB;AAAA,sCAARC,MAAQ;AAARA,YAAQ;AAAA;;AACnC,QAAIC,cAAc,EAAlB;AACA,QAAIC,YAAY,EAAhB;AACA,QAAIC,mBAAmB,EAAvB;;AAEAH,WAAOI,OAAP,CAAe,iBAAS;AACtB,UAAMC,MAAMN,KAAKO,KAAL,CAAZ;;AAEA,UAAI,CAACD,GAAL,EAAU;AACRJ,oBAAYM,IAAZ,CAAiBD,KAAjB;AACD,OAFD,MAEO;AACL,YAAME,aAAaF,MAAMG,KAAN,CAAY,GAAZ,CAAnB;AACA,YAAMC,UAAUF,WAAW,CAAX,CAAhB;AACA,YAAMG,aAAaH,WAAW,CAAX,CAAnB;AACA,YAAII,gBAAgBT,iBAAiBG,KAAjB,KAA2B,EAA/C;;AAEA,YAAID,IAAIQ,EAAJ,IAAUP,KAAd,EAAqB;AACnBM,wBAAcC,EAAd,GAAsBR,IAAIQ,EAA1B,oBAA2CP,KAA3C;AACD;;AAED,YAAID,IAAIS,IAAJ,IAAYJ,OAAhB,EAAyB;AACvBE,wBAAcE,IAAd,GAAwBT,IAAIS,IAA5B,oBAA+CJ,OAA/C;AACD;;AAED,YAAIL,IAAIU,OAAJ,IAAeJ,UAAnB,EAA+B;AAC7BC,wBAAcG,OAAd,GACKV,IAAIU,OAAP,0BAAkCJ,UAAlC,OADF;AAED;;AAED,YAAMK,iBAAiB,eAAKC,SAAL,oBAAgCP,OAAhC,CAAvB;;AAEA,YAAIL,IAAIa,GAAJ,IAAW,GAAX,IAAkB,CAACb,IAAIa,GAAJ,CAAQC,QAAR,CAAiBH,cAAjB,CAAvB,EAAyD;AACvDJ,wBAAcM,GAAd,GACKb,IAAIa,GAAP,6BAAiCF,cAAjC,OADF;AAED;;AAED,YAAII,OAAOC,IAAP,CAAYT,aAAZ,EAA2BU,MAA3B,GAAoC,CAAxC,EAA2C;AACzCnB,2BAAiBG,KAAjB,IAA0BM,aAA1B;AACD;AACF;AACF,KAnCD;;AAqCAQ,WAAOC,IAAP,CAAYtB,IAAZ,EAAkBK,OAAlB,CAA0B,iBAAS;AACjC,UAAIJ,OAAOuB,OAAP,CAAeC,KAAf,KAAyB,CAAC,CAA9B,EAAiC;AAC/BtB,kBAAUK,IAAV,CAAeiB,KAAf;AACD;AACF,KAJD;;AAMA,QAAIC,OAAO,IAAX;AACA,QAAIC,UAAU,EAAd;;AAEA,QAAIzB,YAAYqB,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BI,uDAA+CzB,WAA/C;AACAwB,aAAO,KAAP;AACD;;AAED,QAAIvB,UAAUoB,MAAV,GAAmB,CAAvB,EAA0B;AACxBI,yDAAiDxB,SAAjD;AACAuB,aAAO,KAAP;AACD;;AAED,QAAIL,OAAOC,IAAP,CAAYlB,gBAAZ,EAA8BmB,MAA9B,GAAuC,CAA3C,EAA8C;AAC5CI,mDAA2CC,KAAKC,SAAL,CACzCzB,gBADyC,EAEzC,EAFyC,EAGzC,CAHyC,CAA3C;AAKAsB,aAAO,KAAP;AACD;;AAED,WAAO;AACLC,sBADK;AAELD;AAFK,KAAP;AAID;AA3EW,CAAd;;AA8EAI,UAAU,YAAM;AACdC,UAAQC,KAAR,CAAc,8CAAd;AACD,CAFD;;AAIAC,SAAS,YAAM;AACbF,UAAQC,KAAR,CAAc,aAAd;AACD,CAFD;;AAIAE,GAAGC,IAAH,CAAQ,sCAAR,EAAgD,YAAM;AACpD,MAAMnC,OAAO,0CAAuB,GAAvB,CAAb;;AAEAH,SAAOG,IAAP,EAAaD,mBAAb,CACE,oBADF,EAEE,0BAFF,EAGE,0BAHF,EAIE,0BAJF;AAMD,CATD","file":"dependencies.test.js","sourcesContent":["import path from 'path';\nimport {getPackageDependencies} from '../dependencies';\n\nexpect.extend({\n  toMatchDependencies(deps, ...pkgIds) {\n    let missingDeps = [];\n    let extraDeps = [];\n    let invalidDepFields = {};\n\n    pkgIds.forEach(pkgId => {\n      const dep = deps[pkgId];\n\n      if (!dep) {\n        missingDeps.push(pkgId);\n      } else {\n        const pkgIdParts = pkgId.split('@');\n        const pkgName = pkgIdParts[0];\n        const pkgVersion = pkgIdParts[1];\n        let invalidFields = invalidDepFields[pkgId] || {};\n\n        if (dep.id != pkgId) {\n          invalidFields.id = `${dep.id} (expected: ${pkgId})`;\n        }\n\n        if (dep.name != pkgName) {\n          invalidFields.name = `${dep.name} (expected: ${pkgName})`;\n        }\n\n        if (dep.version != pkgVersion) {\n          invalidFields.version =\n            `${dep.version} ` + `(expected: ${pkgVersion})`;\n        }\n\n        const expectedDepDir = path.normalize(`/node_modules/${pkgName}`);\n\n        if (dep.dir != '.' && !dep.dir.endsWith(expectedDepDir)) {\n          invalidFields.dir =\n            `${dep.dir} ` + `(expected: ...${expectedDepDir})`;\n        }\n\n        if (Object.keys(invalidFields).length > 0) {\n          invalidDepFields[pkgId] = invalidFields;\n        }\n      }\n    });\n\n    Object.keys(deps).forEach(depId => {\n      if (pkgIds.indexOf(depId) == -1) {\n        extraDeps.push(depId);\n      }\n    });\n\n    let pass = true;\n    let message = '';\n\n    if (missingDeps.length > 0) {\n      message += `\\nRequired dependencies missing: ${missingDeps}\\n`;\n      pass = false;\n    }\n\n    if (extraDeps.length > 0) {\n      message += `\\nNot required dependencies found: ${extraDeps}\\n`;\n      pass = false;\n    }\n\n    if (Object.keys(invalidDepFields).length > 0) {\n      message += `\\nInvalid dependency fields: ${JSON.stringify(\n        invalidDepFields,\n        '',\n        2\n      )}\\n`;\n      pass = false;\n    }\n\n    return {\n      message,\n      pass,\n    };\n  },\n});\n\nbeforeAll(() => {\n  process.chdir('./packages/liferay-npm-bundler/src/__tests__');\n});\n\nafterAll(() => {\n  process.chdir('../../../..');\n});\n\nit.only('loads project dependencies correctly', () => {\n  const deps = getPackageDependencies('.');\n\n  expect(deps).toMatchDependencies(\n    'test-project@1.0.0',\n    'test-project-dep-0@1.0.0',\n    'test-project-dep-1@1.0.0',\n    'test-project-dep-0@0.1.0'\n  );\n});\n"]}