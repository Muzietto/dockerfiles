'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.normalizeImportsConfig = normalizeImportsConfig;
exports.unrollImportsConfig = unrollImportsConfig;
/**
 * Normalize an imports configuration to canonicalize all syntactic sugar.
 * @param  {Object} importsConfig the configuration in its original format
 * @return {Object} the normalized configuration after resolving all syntactic sugar
 */
function normalizeImportsConfig(importsConfig) {
	var normalized = {};

	Object.keys(importsConfig).forEach(function (namespace) {
		Object.keys(importsConfig[namespace]).forEach(function (pkgName) {
			var version = importsConfig[namespace][pkgName];

			if (pkgName === '/') {
				pkgName = namespace;
				namespace = '';
			}

			normalized[namespace] = normalized[namespace] || {};
			normalized[namespace][pkgName] = version;
		});
	});

	return normalized;
}

/**
 * Unrolls the imports configuration section of .npmbundlerrc file.
 * @param  {Object} importsConfig the configuration in its original format
 * @return {Object} the unrolled configuration with one entry per module name
 */
function unrollImportsConfig(importsConfig) {
	importsConfig = normalizeImportsConfig(importsConfig || {});

	var imports = {};

	Object.keys(importsConfig).forEach(function (namespace) {
		Object.keys(importsConfig[namespace]).forEach(function (pkgName) {
			if (imports[pkgName]) {
				throw new Error('Package ' + pkgName + ' is mapped to more than one import');
			}

			imports[pkgName] = {
				name: namespace,
				version: importsConfig[namespace][pkgName]
			};
		});
	});

	return imports;
}
//# sourceMappingURL=imports.js.map